plugins {
    id 'org.springframework.boot' version '2.3.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'

}

group = 'com.itau'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set("springfoxSwaggerVersion", "2.9.2")
    set("fixtureFactoryVersion", "3.1.0")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation("org.springframework.boot:spring-boot-starter-validation")
    implementation("io.springfox:springfox-swagger2:$springfoxSwaggerVersion")
    implementation("io.springfox:springfox-swagger-ui:$springfoxSwaggerVersion")

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation("org.springframework.cloud:spring-cloud-contract-wiremock")
    testImplementation("br.com.six2six:fixture-factory:$fixtureFactoryVersion")
    testImplementation("org.springframework.boot:spring-boot-starter-test") {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }


}
dependencyManagement {
    imports {
        mavenBom("org.springframework.cloud:spring-cloud-dependencies:Hoxton.SR8")
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestCoverageVerification

}

jacocoTestReport {
    reports {
        html.enabled = true
    }
    dependsOn test
}
jacoco {
    toolVersion = "0.8.3"
    reportsDir = file("/$buildDir/jacoco")
    jacocoTestReport {
        reports {
            html.enabled = true
        }
        dependsOn test
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = "BUNDLE"
            limit {
                counter = 'INSTRUCTION'
                value = 'COVEREDRATIO'
                minimum = 0.95
            }
            includes = ["**/service/**", "**/controller/**"]
        }
    }
}
